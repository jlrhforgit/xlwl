##########集成redis begin##################
spring.redis.host=127.0.0.1
#Redis服务器连接端口
spring.redis.port=6379
#Redis服务器连接密码（默认为空）
spring.redis.password=
#连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
#连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
#连接池中的最大空闲连接
spring.redis.pool.max-idle=8
#连接池中的最小空闲连接
spring.redis.pool.min-idle=0
#连接超时时间（毫秒）
spring.redis.timeout=30000

##########集成redis end##################

### 解决：springcloud 配置 spring security登录验证问题，
###   com.netflix.discovery.shared.transport.TransportException: 
###   Cannot execute request on any known server   ####begin
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
### 解决：springcloud 配置 spring security登录验证问题，
###   com.netflix.discovery.shared.transport.TransportException: 
###   Cannot execute request on any known server   ####end

spring.mvc.static-path-pattern=/**





#mybatis.type-aliases-package=com.neo.entity
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/jlrh?useSSL=true&serverTimezone=UTC
spring.datasource.username = zzw
spring.datasource.password = zzw

# 设置 c3p0 数据源
spring.datasource.type=com.mchange.v2.c3p0.ComboPooledDataSource
# mybatis打印sql 日志级别 配置
logging.level.com.jlrh.heagle.server.mybatismapper = debug

########################################################
### Java Persistence Api
########################################################
#JPA Configuration:
#spring.jpa.database=MySQL
#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
spring.jpa.generate-ddl=true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
#[org.hibernate.cfg.ImprovedNamingStrategy #org.hibernate.cfg.DefaultNamingStrategy]
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.format_sql = false
spring.jpa.properties.hibernate.max_fetch_depth = 2
